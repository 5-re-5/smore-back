server:
  port: ${PORT:8081}
  servlet:
    context-path: /api
spring:
  application:
    name: smore
  # ?? ?? ???? ?? (??? dev ???? ??)
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  config:
    import: optional:file:.env[.properties]

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: ${OAUTH2_REDIRECT_URI:${baseUrl}/login/oauth2/code/{registrationId}}
            client-name: Google

jwt:
  access-token-secret: ${ACCESS_TOKEN_SECRET_KEY}
  refresh-token-secret: ${REFRESH_TOKEN_SECRET_KEY}
  access-token-expiration-ms: ${ACCESS_TOKEN_EXP_MS:900000}     # 15분
  refresh-token-expiration-ms: ${REFRESH_TOKEN_EXP_MS:604800000}  # 7일

livekit:
  url: ${LIVEKIT_URL}
  apiKey: ${LIVEKIT_API_KEY}
  apiSecret: ${LIVEKIT_API_SECRET}


logging:
  level:
    io.livekit: DEBUG
    org.oreo.smore: DEBUG
---

# ??? ??
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: ${DEV_DB_URL}
    username: ${DEV_DB_USERNAME}
    password: ${DEV_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO_SET}  # ?? ????? validate ?? none ??
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL8Dialect

---

# ??(Production)? ??
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${PROD_DB_URL}
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO_SET}    # ?? ????? validate ?? none ??
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
